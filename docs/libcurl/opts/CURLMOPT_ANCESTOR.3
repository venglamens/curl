.\" **************************************************************************
.\" *                                  _   _ ____  _
.\" *  Project                     ___| | | |  _ \| |
.\" *                             / __| | | | |_) | |
.\" *                            | (__| |_| |  _ <| |___
.\" *                             \___|\___/|_| \_\_____|
.\" *
.\" * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.
.\" *
.\" * This software is licensed as described in the file COPYING, which
.\" * you should have received as part of this distribution. The terms
.\" * are also available at https://curl.se/docs/copyright.html.
.\" *
.\" * You may opt to use, copy, modify, merge, publish, distribute and/or sell
.\" * copies of the Software, and permit persons to whom the Software is
.\" * furnished to do so, under the terms of the COPYING file.
.\" *
.\" * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
.\" * KIND, either express or implied.
.\" *
.\" * SPDX-License-Identifier: curl
.\" *
.\" **************************************************************************
.\"
.TH CURLMOPT_ANCESTOR 3 "13 Nov 2023" libcurl libcurl
.SH NAME
CURLMOPT_ANCESTOR \- easy handle to inherit from
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLMcode curl_multi_setopt(CURLM *handle, CURLMOPT_ANCESTOR, CURL *easy);
.fi
.SH DESCRIPTION
This passes in an easy handle that curl uses to copy values from when doing
DoH requests and uses when closing connections after all "ordinary" easy
handles are gone.

This handle is not returned when \fIcurl_multi_get_handles(3)\fP is called.

This handle will be closed and freed by curl itself when
\fIcurl_multi_cleanup(3)\fP is called. Do not call \fIcurl_easy_cleanup(3)\fP
once the ownership has been transferred with the \fIcurl_multi_setopt(3)\fP
call.

This operation cannot be reversed. The ancestor handle cannot be removed
again.

Set debug callbacks, verbose level, stderr redirects and more for this
ancestor handle to control what happens for DoH requests and when shutting
down "orphan" connections.
.SH DEFAULT
NULL
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
CURL *easy = curl_easy_init();

/* we want verbose shutdowns */
curl_easy_setopt(easy, CURLOPT_VERBOSE, 1L);

curl_multi_setopt(multi, CURLMOPT_ANCESTOR, easy);
.fi
.SH AVAILABILITY
Added in 8.6.0
.SH RETURN VALUE
Returns CURLM_OK if the option is supported, and CURLM_UNKNOWN_OPTION if not.
.SH "SEE ALSO"
.BR CURLOPT_DOH_URL (3),
.BR CURLSHOPT_ANCESTOR (3)
